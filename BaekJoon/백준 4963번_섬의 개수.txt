from collections import deque

def bfs(x,y):
    
    dx = [-1,1,0,0,-1,-1,1,1]
    dy = [0,0,-1,1,1,-1,1,-1]
    q = deque()
    q.append([x,y])
    visited[x][y] = 1
    
    while q:
        a,b = q.popleft()
        
        for i in range(8):
            nx, ny = a + dx[i], b + dy[i]
            
            if 0<= nx < h and 0 <= ny < w and visited[nx][ny] == 0 and graph[nx][ny] == 1:
                visited[nx][ny] = 1
                q.append([nx,ny])

answer = []
while True:
    w,h = map(int, input().split())
    if w == 0 and h == 0:
        break
    cnt = 0
    visited = [[0] * w for _ in range(h)]
    graph = []
    for _ in range(h):
        graph.append(list(map(int, input().split())))
    
    for i in range(h):
        for j in range(w):
            if visited[i][j] == 0 and graph[i][j] == 1:
                bfs(i,j)
                cnt+=1
    answer.append(cnt)
for a in answer:
    print(a)