from collections import deque
    
def bfs(x,y,h):
    dx = [-1,1,0,0]
    dy = [0,0,-1,1]
    queue = deque()
    queue.append([x,y])
    visited[x][y] = 1
    
    while queue:
        a,b = queue.popleft()
        
        for i in range(4):
            nx = a + dx[i]
            ny = b + dy[i]
            if 0<= nx < n and 0<= ny < n and graph[nx][ny] > h and visited[nx][ny] == 0:
                visited[nx][ny] = 1
                queue.append([nx,ny])
n = int(input())

graph = []
for _ in range(n):
    graph.append(list(map(int, input().split())))

max_num = max(map(max,graph))

max_list = []
for k in range(max_num):
    visited = [[0]*n for _ in range(n)]
    cnt = 0
    for i in range(n):
        for j in range(n):
            if graph[i][j] > k and visited[i][j] == 0:
                bfs(i,j,k)
                cnt += 1
    max_list.append(cnt)

print(max(max_list))