from collections import deque

n = int(input())
graph = []

for _ in range(n):
    graph.append(list(map(int,input())))
visited = [[0]*n for _ in range(n)]

move = [(-1,0),(1,0),(0,-1),(0,1)]

def bfs(x,y):
    cnt = 0
    
    graph[x][y] = 0
    queue = deque()
    queue.append((x,y))
    
    while queue:
        x,y =queue.popleft()
        cnt +=1
        
        for i in range(4):
            nx = x + move[i][0]
            ny = y + move[i][1]
            
            if 0<=nx<n and 0 <= ny < n:
                if graph[nx][ny] == 1 and visited[nx][ny] == 0:
                    graph[nx][ny] = 0
                    queue.append((nx,ny))
                    
    return cnt

total = 0 
nums_list = []

for i in range(n):
    for j in range(n):
        if graph[i][j] == 1:
            nums_list.append(bfs(i,j))
            total += 1
print(total)
for x in sorted(nums_list):
    print(x)