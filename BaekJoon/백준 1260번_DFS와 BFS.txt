from collections import deque

n,m,v = map(int, input().split())
graph = [[] for _ in range(n+1)]
visited = [0] * (n+1)

for _ in range(m):
    a,b = map(int,input().split())
    graph[a].append(b)
    graph[b].append(a)
    
for i in range(len(graph)):
    graph[i].sort()
    
def bfs(v):
    queue = deque([v])
    visited[v] = 0
    
    while queue:
        v = queue.popleft()
        print(v, end = ' ')
        for a in graph[v]:
            if visited[a] == 1:
                queue.append(a)
                visited[a] = 0
                
def dfs(v):
    visited[v] = 1
    print(v, end=' ')
    for a in graph[v]:
        if visited[a] != 1:
            dfs(a)
            visited[a] = 1

            
dfs(v)
print()
bfs(v)