####BFS 풀이####
from collections import deque

def solution(n, computers):
    cnt = 0
    visited = [0] * n
    
    def bfs(start, visited, computers):
        visited[start] = 1
        queue = deque([start])
        
        while queue:
            v = queue.popleft()
            for i in range(n):
                if computers[v][i] == 1 and visited[i] == 0:
                    visited[i] = 1
                    queue.append(i)
    for i in range(n):
        if visited[i] == 0:
            bfs(i,visited, computers)
            cnt += 1
    return cnt

####DFS 풀이####
def solution(n, computers):
    cnt = 0
    visited = [0] * n
    
    def dfs(start, visited, computers):
        visited[start] = 1
        
        for i in range(n):
            if visited[i] == 0 and computers[start][i] == 1:
                dfs(i,visited,computers)
                
    for i in range(n):
        if visited[i] == 0:
            dfs(i,visited,computers)
            cnt += 1
    return cnt