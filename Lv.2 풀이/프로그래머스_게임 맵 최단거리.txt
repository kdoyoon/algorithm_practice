from collections import deque

def solution(maps):
    len_x, len_y = len(maps), len(maps[0])
    queue = deque([(0,0)])
    directions = [(-1,0),(1,0),(0,-1),(0,1)]
    
    while queue:
        x, y =queue.popleft()
        
        for i in range(4):
            nx = x + directions[i][0]
            ny = y + directions[i][1]
            
            if 0<=nx<len_x and 0<=ny<len_y and maps[nx][ny] == 1:
                maps[nx][ny] = maps[x][y]+1
                queue.append((nx,ny))
    return maps[-1][-1] if maps[-1][-1] > 1 else -1